<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blockchain.server.tron.mapper.TronWalletMapper">
    <resultMap id="TronWalletMap" type="com.blockchain.server.tron.entity.TronWallet">
        <result property="userOpenId" column="user_open_id"/>
        <result property="tokenSymbol" column="token_symbol"/>
        <result property="balance" column="balance"/>
        <result property="createTime" column="create_time"/>
        <result property="tokenDecimal" column="token_decimal"/>
        <result property="walletType" column="wallet_type"/>
        <result property="updateTime" column="update_time"/>
        <result property="freeBalance" column="free_balance"/>
        <result property="addr" column="addr"/>
        <result property="hexAddr" column="hex_addr"/>
        <result property="tokenAddr" column="token_addr"/>
        <result property="freezeBalance" column="freeze_balance"/>
    </resultMap>
    <resultMap id="TronWalletDTO" type="com.blockchain.server.tron.dto.wallet.TronWalletDTO">
        <result property="userOpenId" column="user_open_id"/>
        <result property="tokenSymbol" column="token_symbol"/>
        <result property="balance" column="balance"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="tokenDecimal" column="token_decimal"/>
        <result property="walletType" column="wallet_type"/>
        <result property="freeBalance" column="free_balance"/>
        <result property="addr" column="addr"/>
        <result property="hexAddr" column="hex_addr"/>
        <result property="tokenAddr" column="token_addr"/>
        <result property="freezeBalance" column="freeze_balance"/>
    </resultMap>

    <resultMap id="WalletBaseDTO" type="com.blockchain.common.base.dto.wallet.WalletBaseDTO">
        <result property="userId" column="user_open_id"/>
        <result property="addr" column="addr"/>
        <result property="hexAddr" column="hex_addr"/>
        <result property="coinMain" column="token_main"/>
        <result property="coinType" column="token_addr"/>
        <result property="coinName" column="token_symbol"/>
        <result property="walletType" column="wallet_type"/>
        <result property="balance" column="balance"/>
        <result property="freeBalance" column="free_balance"/>
        <result property="freezeBalance" column="freeze_balance"/>
        <result property="coinDecimals" column="token_decimal"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="tableName">dapp_tron_wallet</sql>

    <sql id="timeDesc"> ORDER
    BY
    create_time
    DESC </sql>

    <sql id="tableWhere">
        <where>
            <if test="params.userId != null and params.userId != '' ">AND user_open_id =#{params.userId}</if>
            <if test="params.coinType != null and params.coinType != '' ">AND token_addr = #{params.coinType}</if>
            <if test="params.coinName != null and params.coinName != '' ">AND token_symbol = #{params.coinName}</if>
            <if test="params.walletType != null and params.walletType != '' ">AND wallet_type = #{params.walletType}
            </if>
            <if test="params.startDate != null and params.startDate != ''">AND DATE_FORMAT(create_time,'%Y-%m-%d')
                >= DATE_FORMAT(#{params.startDate},'%Y-%m-%d')
            </if>
            <if test="params.endDate != null and params.endDate != ''">AND DATE_FORMAT(create_time,'%Y-%m-%d')
                &lt;= DATE_FORMAT(#{params.endDate},'%Y-%m-%d')
            </if>
        </where>
    </sql>

    <select id="selectWalletByTokenSymbol" parameterType="java.lang.String" resultMap="TronWalletMap">
        select addr, hex_addr, token_addr, user_open_id, token_symbol, token_decimal, balance, free_balance, freeze_balance,
        create_time, update_time, wallet_type
        from
        <include refid="tableName"/>
        where user_open_id = #{userId} and token_symbol = #{tokenSymbol} and wallet_type = #{walletType}
    </select>

    <sql id="selectTronWalletVo">
        SELECT
        user_open_id,
        token_symbol,
        CONCAT(balance) as balance,
        create_time,
        token_decimal,
        wallet_type,
        update_time,
        CONCAT(free_balance) as free_balance,
        addr,
        hex_addr,
        token_addr,
        CONCAT(freeze_balance) as freeze_balance
        FROM
        <include refid="tableName"/>
    </sql>

    <select id="selectByAddrAndTokenAddr" resultMap="TronWalletDTO">
        <include refid="selectTronWalletVo"/>
        WHERE
        addr = #{addr}
        and token_addr = #{tokenAddr}
    </select>

    <update id="updateWalletAllBalanceInRowLock">
        UPDATE
        <include refid="tableName"/>
        tronWallet
        SET
        tronWallet.balance = tronWallet.balance + #{balance},
        tronWallet.free_balance = tronWallet.free_balance + #{freeBalance},
        tronWallet.freeze_balance = tronWallet.freeze_balance + #{freezeBalance},
        tronWallet.update_time = #{modifyTime}
        WHERE tronWallet.user_open_id = #{userOpenId}
        and token_addr = #{tokenAddr}
        and wallet_type = #{walletType}
        AND tronWallet.free_balance + #{freeBalance} >= 0
        AND tronWallet.freeze_balance + #{freezeBalance} >= 0
    </update>

    <select id="selectByAddrAndTokenAddrAndWalletType" resultMap="TronWalletDTO">
        <include refid="selectTronWalletVo"/>
        WHERE
        addr = #{addr}
        and token_addr = #{tokenAddr}
        and wallet_type = #{walletType}
    </select>

    <select id="selectByUserOpenIdAndTokenAddrAndWalletType" resultMap="TronWalletDTO">
        <include refid="selectTronWalletVo"/>
        WHERE
        user_open_id = #{userOpenId}
        and token_addr = #{tokenAddr}
        and wallet_type = #{walletType}
    </select>

    <select id="selectByAddrAndWalletType" resultMap="TronWalletDTO">
        <include refid="selectTronWalletVo"/>
        WHERE
        addr = #{addr}
        and wallet_type = #{walletType}
    </select>

    <select id="selectByUserOpenIdAndWalletType" resultMap="TronWalletDTO">
        <include refid="selectTronWalletVo"/>
        WHERE
        user_open_id = #{userOpenId}
        and wallet_type = #{walletType}
    </select>

    <select id="selectQuery" resultMap="WalletBaseDTO">
        SELECT
        *, 'TRX' AS token_main
        FROM
        <include refid="tableName"/>
        <include refid="tableWhere"/>
        <include refid="timeDesc"/>
    </select>

    <update id="updateBalanceByUserIdInRowLock">
        UPDATE
        <include refid="tableName"/>
        wallet
        SET
        wallet.balance = wallet.balance + #{balance},
        wallet.free_balance = wallet.free_balance + #{freeBalance},
        wallet.freeze_balance = wallet.freeze_balance + #{freezeBalance},
        wallet.update_time = #{updateTime}
        WHERE
        user_open_id = #{userOpenId}
        AND token_addr = #{tokenAddr}
        AND wallet_type = #{walletType}
        AND wallet.balance + #{balance} >= 0
        AND wallet.free_balance + #{freeBalance} >= 0
        AND wallet.freeze_balance + #{freezeBalance} >= 0
    </update>

    <update id="updateBalanceByAddrInRowLock">
        UPDATE
        <include refid="tableName"/>
        wallet
        SET
        wallet.balance = wallet.balance + #{balance},
        wallet.free_balance = wallet.free_balance + #{freeBalance},
        wallet.freeze_balance = wallet.freeze_balance + #{freezeBalance},
        wallet.update_time = #{updateTime}
        WHERE
        addr = #{addr}
        AND token_addr = #{tokenAddr}
        AND wallet_type = #{walletType}
        AND wallet.balance + #{balance} >= 0
        AND wallet.free_balance + #{freeBalance} >= 0
        AND wallet.freeze_balance + #{freezeBalance} >= 0
    </update>

</mapper>