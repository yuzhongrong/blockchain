<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blockchain.server.eth.mapper.EthClearingCountTotalMapper">
    <resultMap id="EthClearingCountTotalMap" type="com.blockchain.server.eth.entity.EthClearingCountTotal">
        <result property="id" column="id"/>
        <result property="tokenSymbol" column="token_symbol"/>
        <result property="balance" column="balance"/>
        <result property="realBalance" column="real_balance"/>
        <result property="diffBalance" column="diff_balance"/>
        <result property="preTime" column="pre_time"/>
        <result property="preBalance" column="pre_balance"/>
        <result property="createTime" column="create_time"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="status" column="status"/>
    </resultMap>

    <resultMap id="WalletCountTotalMap" type="com.blockchain.common.base.dto.wallet.WalletCountTotalDTO">
        <result property="addr" column="addr"/>
        <result property="coinName" column="coin_name"/>
        <result property="tokenSymbol" column="token_symbol"/>
        <result property="balance" column="balance"/>
        <result property="balance" column="balance"/>
        <result property="freeBalance" column="free_balance"/>
        <result property="freezeBalance" column="freeze_balance"/>
        <result property="walletCreateTime" column="wallet_create_time"/>
        <result property="walletUpdateTime" column="wallet_update_time"/>
        <result property="txId" column="id"/>
        <result property="fromAddr" column="from_addr"/>
        <result property="toAddr" column="to_addr"/>
        <result property="amount" column="amount"/>
        <result property="tokenAddr" column="token_addr"/>
        <result property="tokenSymbol" column="token_symbol"/>
        <result property="transferType" column="transfer_type"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="status" column="status"/>
    </resultMap>

    <sql id="tableName">dapp_eth_clearing_count_total</sql>
    <sql id="selectBase">
        SELECT * FROM
        <include refid="tableName"/>
    </sql>
    <sql id="timeDesc"> ORDER BY create_time DESC </sql>
    <sql id="limitCount"> LIMIT ${count} </sql>
    <sql id="tableWhere">
        <where>
            <if test="addr != null and addr != '' ">AND addr = #{addr}</if>
            <if test="tokenSymbol != null and tokenSymbol != '' ">AND token_symbol = #{tokenSymbol}</if>
            <if test="walletType != null and walletType != '' ">AND wallet_type = #{walletType}</if>
        </where>
    </sql>

    <select id="selectNewestOne" resultMap="EthClearingCountTotalMap">
        <include refid="selectBase"/>
        <where>
            <if test="tokenSymbol != null and tokenSymbol != '' ">AND token_symbol = #{tokenSymbol}</if>
        </where>
        <include refid="timeDesc"/>
        <include refid="limitCount">
            <property name="count" value="1"/>
        </include>
    </select>

    <select id="selectBasicsRecord" resultMap="WalletCountTotalMap">
        SELECT
        wallet.addr,
        wallet.user_open_id,
        wallet.token_symbol as coin_name,
        wallet.token_decimals,
        wallet.balance,
        wallet.free_balance,
        wallet.freeze_balance,
--         wallet.wallet_type,
        wallet.create_time AS wallet_create_time,
        wallet.update_time AS wallet_update_time,
        tx.*
        FROM
        dapp_eth_wallet wallet
        LEFT JOIN
        dapp_eth_wallet_transfer tx
        ON
        (wallet.addr = tx.from_addr
        OR
        wallet.addr = tx.to_addr)
        AND
        tx.`status` = 1
        <if test="stareDate != null">
            AND
            tx.create_time <![CDATA[>]]> #{stareDate}
        </if>
        <if test="endDate != null">
            AND
            tx.create_time <![CDATA[<=]]> #{endDate}
        </if>
         <where>
             <if test="coinName != null and coinName != ''">
                 AND wallet.token_symbol = #{coinName}
             </if>
             <if test="walletType != null and walletType != ''">
                 AND wallet.wallet_type = #{walletType}
             </if>
         </where>
    </select>
</mapper>